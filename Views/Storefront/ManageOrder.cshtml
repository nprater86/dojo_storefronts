@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = "Order Management";
}

@model SubmittedOrder;

<div class="row justify-content-between align-items-center">
    <div class="col-auto">
        <h1 class="display-4 mt-5 mb-5">Order#: @Model.SubmittedOrderId</h1>
    </div>
    <div class="col-auto"><a asp-action="ManageOrders" asp-controller="Storefront">Back to Orders</a></div>
</div>
<form asp-action="UpdateStatus" asp-controller="Order" class="mb-5">
    <input type="hidden" name="SubmittedOrderId" value="@Model.SubmittedOrderId">
    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label" asp-for="Status">Order Status:</label>
        </div>
        <div class="col-2">
            <select class="form-select" asp-for="Status">
                <option value="Submitted">Submitted</option>
                <option value="Processing">Processing</option>
                @{
                    if(!@Model.Products.Any(p => p.OrderedQuantity > p.Product.Quantity))
                    {
                        <option value="Shipped">Shipped</option>
                        <option value="Complete">Complete</option>
                    }
                }
            </select>
        </div>
        <div class="col-2">
            <input type="submit" class="btn btn-secondary" value="Update">
        </div>
    </div>
    <div class="row">
        <div class="col-2">
            <p class="col-form-label">Shipping Details:</p>
        </div>
        <div class="col-auto">
            <label class="col-form-label" asp-for="Carrier">Carrier:</label>
        </div>
        <div class="col-2">
            <input class="form-control" asp-for="Carrier">
        </div>
        <div class="col-auto">
            <label class="col-form-label" asp-for="TrackingNumber">Tracking Number:</label>
        </div>
        <div class="col-3">
            <input class="form-control" asp-for="TrackingNumber">
        </div>
    </div>
</form>
<div class="row mb-5">
    <div class="col-2">
        <h6>Address:</h6>
        <div class="border rounded p-2">
            <p>@Model.ShippingAddress.NameOnPackage</p>
            <p>@Model.ShippingAddress.Address1</p>
            @{
                if(Model.ShippingAddress.Address2 != null)
                {
                    <p>@Model.ShippingAddress.Address2</p>
                }
            }
            <p>@Model.ShippingAddress.City, @Model.ShippingAddress.State @Model.ShippingAddress.Zipcode</p>
        </div>
    </div>
    <div class="col-2">
        <h6>Payment Method:</h6>
        <div class="border rounded p-2">
            <p>@Model.Payment.NameOnCard</p>
            <p>@Model.Payment.Company</p>
            <p>@Model.Payment.Number</p>
            <p>Exp: @Model.Payment.Expiration.ToString("MM/yy") | Zip: @Model.Payment.Zipcode</p>
            <p>CVV: @Model.Payment.CVV</p>
        </div>
    </div>
    <div class="col-2">
        <h6>Billing Total:</h6>
        <div class="border rounded p-2">
            <p>$@Model.Products.Sum(p => p.Product.Price).ToString("#.##")</p>
        </div>
    </div>
</div>
<div class="row">
    <h5>Products:</h5>
    <table class="table table-striped">
        <thead>
            <th>ID</th>
            <th>Product Name</th>
            <th>Qty (Inventory)</th>
            <th>Price</th>
        </thead>
        <tbody>
            @{
                decimal sum = 0;
                foreach(var product in @Model.Products)
                {
                    <tr>
                        <td>@product.Product.ProductId</td>
                        <td>@product.Product.Name</td>
                        <td>@product.OrderedQuantity (@product.Product.Quantity)
                            @{
                                if(product.OrderedQuantity > product.Product.Quantity)
                                {
                                    <small><p class="text-danger">Not enough inventory.</p></small>
                                }
                            }
                        </td>
                        <td>$@((product.OrderedQuantity*product.Product.Price).ToString("#.##"))</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
